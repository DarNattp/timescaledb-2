# Read Nginx access log
[[inputs.tail]]
  files = [
    "/var/log/nginx-1/access.log",
    "/var/log/nginx-2/access.log",
    "/var/log/nginx-3/access.log"
  ]
  from_beginning = false
  grok_patterns = ["%{COMBINED_LOG_FORMAT}"]
  name_override = "nginx_access_log"
  grok_custom_pattern_files = []
  grok_custom_patterns = '''
  '''
  grok_timezone = "Asia/Bangkok"
  data_format = "grok"



# Read Nginx metrics via HTTP status module
[[inputs.nginx]]
  urls = [
    "http://nginx-1/status",
    "http://nginx-2/status",
    "http://nginx-3/status"]

# Output data to TimescaleDB
[[outputs.postgresql]]
#   # postgres://timescale:admin123@timescaledb-1:5432/test?sslmode=disable
  connection = "host=timescaledb user=timescale password=admin123 sslmode=disable dbname=timescaledb"
  create_templates = [
  '''
#   CREATE TABLE nginx_access_log (
#     id SERIAL PRIMARY KEY,
#     timestamp TIMESTAMPTZ NOT NULL,
#     host TEXT NOT NULL,
#     path TEXT NOT NULL,
#     resp_code INTEGER NOT NULL,
#     verb TEXT NOT NULL,
#     agent TEXT NOT NULL,
#     client_ip INET NOT NULL,
#     ident TEXT,
#     auth TEXT,
#     request TEXT NOT NULL,
#     http_version NUMERIC NOT NULL,
#     resp_bytes BIGINT NOT NULL,
#     referrer TEXT,
#     test_col TEXT NOT NULL
# );
  SELECT create_hypertable('nginx_access_log', 'time');

  '''
]

# Output data to file log.out
[[outputs.file]]
  files = ["stdout", "/tmp/log.out"]
  data_format = "influx"


